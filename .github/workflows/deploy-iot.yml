name: AWS IoT Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Deploy AWS IoT Setup
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::626635402177:role/GitHubActionRole
          aws-region: ap-south-1

      - name: Deploy AWS IoT Rule
        run: |
          aws iot create-topic-rule \
            --rule-name "MyIoTRule" \
            --cli-input-json file://iot-rule.json \
            --region ap-south-1 || echo "IoT Rule already exists"

      - name: Deploy AWS Lambda Function
        run: |
          zip function.zip lambda/index.js
          aws lambda update-function-code \
            --function-name MyIotCdkStack-IoTLambdaFunctionD2C5DBD1-ZhDBaY89rI78 \
            --zip-file fileb://function.zip \
            --region ap-south-1

      - name: Set AWS IoT Logging Options
        run: |
          cat <<EOF > iot-logging.json
          {
            "roleArn": "arn:aws:iam::626635402177:role/MyIotCdkStack-IoTLambdaFunctionServiceRoleBB3A5E35-Udz5ZvmSlShB",
            "logLevel": "DEBUG"
          }
          EOF
          aws iot set-logging-options --logging-options file://iot-logging.json --region ap-south-1 || echo "Logging already configured"

      - name: Publish Test IoT Message
        run: |
          aws iot-data publish \
            --topic "telemetry/data" \
            --payload "$(echo '{"temperature": 25}' | base64)" \
            --region ap-south-1

      - name: Verify CloudWatch Logs
        run: |
          aws logs describe-log-groups --log-group-name-prefix "/aws/iot" --region ap-south-1



