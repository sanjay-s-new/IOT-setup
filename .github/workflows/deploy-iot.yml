name: AWS IoT Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write  # If you are using OIDC, keep this line
  contents: read   # Allows reading repo contents

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up AWS credentials
      - name: Set up AWS credentials
        run: |
          echo "Setting up AWS credentials..."
          aws configure set aws_access_key_id "$AWS_ACCESS_KEY_ID"
          aws configure set aws_secret_access_key "$AWS_SECRET_ACCESS_KEY"
          aws configure set default.region ap-south-1
          aws configure list

      # Deploy AWS IoT Rule
      - name: Deploy AWS IoT Rule
        run: |
          if aws iot describe-topic-rule --rule-name "MyIoTRule" --region ap-south-1; then
            echo "Deleting existing IoT Rule..."
            aws iot delete-topic-rule --rule-name "MyIoTRule" --region ap-south-1
          fi
          echo "Creating new IoT Rule..."
          aws iot create-topic-rule \
            --cli-input-json file://iot-rule.json \
            --region ap-south-1

      # Deploy AWS Lambda Function
      - name: Deploy AWS Lambda Function
        run: |
          if [ -f lambda/index.js ]; then
            echo "Zipping Lambda function..."
            zip function.zip lambda/index.js
            aws lambda update-function-code \
              --function-name MyIotCdkStack-IoTLambdaFunctionD2C5DBD1-ZhDBaY89rI78 \
              --zip-file fileb://function.zip \
              --region ap-south-1
          else
            echo "‚ùå Lambda function file not found!"
            exit 1
          fi

      # Set AWS IoT Logging Options
      - name: Set AWS IoT Logging Options
        run: |
          cat <<EOF > iot-logging.json
          {
            "roleArn": "arn:aws:iam::626635402177:role/MyIotCdkStack-IoTLambdaFunctionServiceRoleBB3A5E35-Udz5ZvmSlShB",
            "logLevel": "DEBUG"
          }
          EOF
          aws iot set-logging-options --logging-options file://iot-logging.json --region ap-south-1 || echo "Logging already configured"

      # Publish Test IoT Message
      - name: Publish Test IoT Message
        run: |
          aws iot-data publish \
            --topic "telemetry/data" \
            --payload "$(echo '{"temperature": 25}' | base64)" \
            --region ap-south-1

      # Verify CloudWatch Logs
      - name: Verify CloudWatch Logs
        run: |
          aws logs describe-log-groups --log-group-name-prefix "/aws/iot" --region ap-south-1

